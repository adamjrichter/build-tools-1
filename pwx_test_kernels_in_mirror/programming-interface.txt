
	The kernel test script relies can invoke different drivers
(for lack of a better term) for different operating system distributions.


Top level scripts, installed in /usr/local/bin:

	pwx_test_kernels_in_mirror [options] mirror_dirs_relative_paths...

		Additional options:

		--arch=architecture            [default: amd64]
		--command=subcommand	       [default: pwx_test_kernel_pkgs]
		--command-args=args	       [default: ""]
		--distribution=dist            [default: ubuntu]
		--help
		--logdir=logdir                [default: based on distribution]
		--mirror-top=mirror_top_dir
		--pfxuse=pxfuse_src_dir        [default: download tempoary

		Descend into all subdirectories of mirror_dirs, finding
		kernel head packages that should be grouped together,
		and pass each group of packages to subcommand (usually
		pwx_test_kernel_pkgs) with the arguments --distribution,
		--logdir, and --pxfuse explicitly passed, along with any
		additional arguments passwd with "--command-args" (although it
		is also possible to pass arguments by passing a
		"--command=..." value that includes spaces followed
		by arguments).  pwx_test_kernels_in_mirror only runs the
		subcommand if it succeeds in making a nonblocking request
		to flock the log directory.  The lock is held while the
		subcommand runs.

		The value of logdir passed to the command is changed to
		logdir/pxfuse-checksum-$CHECKSUM/distro/mirror_dir/subdir/pkg
		where mirror_dir/subdir/pkg is the relative path from
		the current working directory to the first package file
		that will be passed to the subcommd.

		Note that mirror_dirs should be specified as paths
		relative to the current working directory, preferably
		without	using ".." so that build reuslts will be
		recorded in the problem directories.

		The tests are invoked even if one of the subcommands
		(tests) fails.

		pwx_test_kernels_in_mirror exits with exit code 0
		(success) only if all subcommands (tests) succeeded.
		Otherwise, it exists non-zero (failure).


DESCRIPTION OF INTERNAL FUNCTIONS


    Distribution interface (defined by sourcing
    /usr/local/share/pwx_test_kernels_in_mirror/mirror_walk_driver.sh ):

	The distribution interface uses the $distribution shell global
	variable to select the distribution type.  Currently, "ubuntu",
	"debian" and "centos" are supported.  Every shell function func
	listed below is just a wrapper that invokes func_$distribution.

	pkg_files_to_names	- Given a list of package files output
				  the names of the packages that those
				  package files provide.

        get_default_mirror_dirs - Output a list of mirror directories,
				  separated by white space, corresponding
				  to the selected Linux distribution.

	walk_mirror dir command [args..]
				- Descend into subdirectories of a
				  mirror tree, finding the relevant
				  kernel packages and invoking
				  comand with args followed by package
				  files that refers to a single set of
				  kernel headers.  Typically command
				  and args is something like
				  "test_kernel_pkgs_log_results
				  $pxfuse_src_dir $log_dir_top".
				  This function relies on the global
				  variable $arch (which currently should
				  be "x86_64").  In the future, this
				  function might be moved to a separate
				  file related to mirror operations.

Directories on host:

	/var/lib/pwx-mirror	- Contains crontab.txt
	/home/ftp/build-results

	/usr/local/share/test_kernels_in_mirror/scripts
		- All script libraries used by portworx-test-kernels-in-mirror

TODO:
	Commands to compare list of old a new kernel compilations, and
	notify people about new compilation results.
